// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  image         String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  orders        Order[]
  cart          Cart?

  // Dijital ürün satın alma bilgileri
  purchases     OrderItem[] @relation("UserPurchases")
}

model Product {
  id          String    @id @default(cuid())
  name        String
  description String
  details     String?   @db.Text
  price       Float
  image       String    // Ana resim URL'si (Cloudinary)
  imagePublicId String?  // Cloudinary public ID
  gallery     String[]  // Ek resim URL'leri (Cloudinary)
  galleryPublicIds String[] // Cloudinary public ID'ler
  features    String[]  // Ürün özellikleri
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String

  // Dijital ürün alanları
  isDigital   Boolean   @default(true)  // Dijital ürün mü?
  downloadUrl String?   // Dijital ürünler için indirme linki
  fileSize    String?   // Dosya boyutu (örn: "15MB")
  fileFormat  FileFormat? // Dosya formatı
  demoUrl     String?   // Demo/önizleme URL'si

  // Şablon özellikleri
  templateType String?   // Şablon türü (örn: "Wix", "Framer", "Next.js")
  compatibility String[] // Uyumlu platformlar

  // Satış ve değerlendirme
  rating      Float     @default(0)
  reviewCount Int       @default(0)
  featured    Boolean   @default(false) // Öne çıkan ürün mü?

  // SEO ve pazarlama
  slug        String?   @unique // SEO dostu URL
  tags        String[]  // Etiketler

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  cartItems   CartItem[]
  orderItems  OrderItem[]
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  image       String?   // Kategori görseli
  slug        String?   @unique // SEO dostu URL
  featured    Boolean   @default(false)
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Cart {
  id        String     @id @default(cuid())
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String     @unique
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        String   @id @default(cuid())
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cartId, productId])
}

model Order {
  id            String      @id @default(cuid())
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  items         OrderItem[]
  status        OrderStatus @default(PENDING)
  total         Float
  paymentMethod String
  paymentId     String?     // Ödeme sistemi tarafından verilen ID
  isDigitalOrder Boolean    @default(true) // Dijital ürün siparişi mi?
  emailSent     Boolean     @default(false) // İndirme bağlantısı e-postası gönderildi mi?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model OrderItem {
  id            String   @id @default(cuid())
  order         Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId       String
  product       Product  @relation(fields: [productId], references: [id])
  productId     String
  quantity      Int
  price         Float
  isDigital     Boolean  @default(true)
  downloadUrl   String?  // Satın alınan dijital ürünün indirme bağlantısı
  downloadCount Int      @default(0) // İndirme sayısı
  expiresAt     DateTime? // İndirme bağlantısının son kullanma tarihi (varsa)

  // Satın alan kullanıcı referansı
  buyer         User?    @relation("UserPurchases", fields: [buyerId], references: [id])
  buyerId       String?

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// Enum değerleri
enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING     // Beklemede
  PROCESSING  // İşleniyor
  COMPLETED   // Tamamlandı
  CANCELLED   // İptal edildi
}

enum FileFormat {
  ZIP
  PDF
  PSD
  AI
  SKETCH
  FIG
  XD
  HTML
  CSS
  JS
  OTHER
}
